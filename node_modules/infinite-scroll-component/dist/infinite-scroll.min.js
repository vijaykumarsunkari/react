var InfiniteScroll=function(){"use strict";function e(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class t extends HTMLElement{static get observedAttributes(){return["data-height","data-threshold"]}constructor(){super(),t.templateElem||(t.templateElem=document.createElement("template"),t.templateElem.innerHTML=t.template),this.divContentElem=null,this.thresholdLimit=.85,this.scrollAnimationTick=null,this.hasBreachedThreshold=!1,this.boundScrollTick=()=>this.scrollTick()}connectedCallback(){const e=this.attachShadow({mode:"open"}),i=t.templateElem.content.cloneNode(!0);e.appendChild(i),this.divContentElem=e.querySelector("div"),this.setDivContainerHeight()}disconnectedCallback(){window.removeEventListener("scroll",this.boundScrollTick),this.divContentElem.removeEventListener("scroll",this.boundScrollTick),cancelAnimationFrame(this.scrollAnimationTick),this.scrollAnimationTick=null}attributeChangedCallback(e,t,i){if("data-height"===e)this.setDivContainerHeight(i);else if("data-threshold"===e){const e=parseFloat(i)||this.thresholdLimit;e>0&&e<=1&&(this.thresholdLimit=e)}}setDivContainerHeight(e=this.getAttribute("data-height")){this.divContentElem&&(e?(this.divContentElem.addEventListener("scroll",this.boundScrollTick,{passive:!0}),window.removeEventListener("scroll",this.boundScrollTick)):(window.addEventListener("scroll",this.boundScrollTick,{passive:!0}),this.divContentElem.removeEventListener("scroll",this.boundScrollTick)),this.divContentElem.style.height=e)}scrollTick(){this.scrollAnimationTick||(this.scrollAnimationTick=window.requestAnimationFrame((()=>{let e=(window.scrollY+window.innerHeight)/this.divContentElem.scrollHeight;if(this.divContentElem.style.height&&(e=(this.divContentElem.scrollTop+this.divContentElem.clientHeight)/this.divContentElem.scrollHeight),e>=this.thresholdLimit){if(!this.hasBreachedThreshold){const e=new CustomEvent("infinite-scroll-fetch",{detail:{elem:this},bubbles:!0});this.hasBreachedThreshold=!0,this.dispatchEvent(e)}}else this.hasBreachedThreshold=!1;this.scrollAnimationTick=null})))}}return e(t,"template","\n        <style>\n            div {\n                overflow-y: auto;\n            }\n        </style>\n        <div>\n            <slot></slot>\n        </div>\n    "),e(t,"templateElem",null),function(){const e="infinite-scroll";customElements.get(e)?console.error("There is already a custom element registered under the name infinite-scroll"):customElements.define(e,t)}(),t}();
